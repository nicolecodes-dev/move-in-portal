{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nicole/move-in-portal/app/styles.ts"],"sourcesContent":["export const styles = {\n    layout: { display: \"flex\" },\n    drawer: { width: 240, flexShrink: 0 },\n    sidebar: { width: 240, p: 2, bgcolor: \"grey.200\", height: \"100%\" },\n    content: { flexGrow: 1, p: 3 },\n    title: { fontWeight: \"bold\", mb: 2 },\n    card: { p: 3, bgcolor: \"#fff\", borderRadius: 2, boxShadow: 3, maxWidth: 500 },\n    step: { display: \"flex\", alignItems: \"center\", gap: 2, my: 2 }, // better spacing\n    button: { ml: \"auto\", minWidth: 100 }, // prevents small buttons\n    subTitle: { mt: 3, mb: 1 },\n    icon: { mr: 1 },\n    divider: { my: 2 },\n    helpButton: { mt: 1, mr: 2 },\n  };\n  "],"names":[],"mappings":";;;AAAO,MAAM,SAAS;IAClB,QAAQ;QAAE,SAAS;IAAO;IAC1B,QAAQ;QAAE,OAAO;QAAK,YAAY;IAAE;IACpC,SAAS;QAAE,OAAO;QAAK,GAAG;QAAG,SAAS;QAAY,QAAQ;IAAO;IACjE,SAAS;QAAE,UAAU;QAAG,GAAG;IAAE;IAC7B,OAAO;QAAE,YAAY;QAAQ,IAAI;IAAE;IACnC,MAAM;QAAE,GAAG;QAAG,SAAS;QAAQ,cAAc;QAAG,WAAW;QAAG,UAAU;IAAI;IAC5E,MAAM;QAAE,SAAS;QAAQ,YAAY;QAAU,KAAK;QAAG,IAAI;IAAE;IAC7D,QAAQ;QAAE,IAAI;QAAQ,UAAU;IAAI;IACpC,UAAU;QAAE,IAAI;QAAG,IAAI;IAAE;IACzB,MAAM;QAAE,IAAI;IAAE;IACd,SAAS;QAAE,IAAI;IAAE;IACjB,YAAY;QAAE,IAAI;QAAG,IAAI;IAAE;AAC7B"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///Users/nicole/move-in-portal/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\n\n// mui components\nimport {\n  Box,\n  Container,\n  Typography,\n  Paper,\n  Button,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n} from \"@mui/material\";\n\n// mui icons\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport WarningAmberIcon from \"@mui/icons-material/WarningAmber\";\nimport HourglassEmptyIcon from \"@mui/icons-material/HourglassEmpty\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\n\n// styles\nimport { styles } from \"./styles\";\n\n// steps configuration\nconst stepsList = [\n  { key: \"contractSigned\", label: \"Contract signed\" },\n  { key: \"depositPaid\", label: \"Deposit paid\" },\n  { key: \"membershipPaid\", label: \"Membership fee paid\", alwaysComplete: true },\n  { key: \"welcomeEmailSent\", label: \"Your welcome email has been sent\" },\n];\n\n/**\n * Determines which icon to display based on step completion status.\n */\nconst getIcon = (completed: boolean, alwaysComplete = false) => {\n  if (alwaysComplete || completed) return <CheckCircleIcon color=\"success\" sx={styles.icon} />;\n  return <WarningAmberIcon color=\"warning\" sx={styles.icon} />;\n};\n\nexport default function Home() {\n  const [steps, setSteps] = useState({\n    contractSigned: false,\n    depositPaid: false,\n    membershipPaid: true, // always paid\n    welcomeEmailSent: false,\n  });\n\n  /**\n   * Loads saved progress from localStorage on first render.\n   */\n  useEffect(() => {\n    const savedSteps = JSON.parse(localStorage.getItem(\"moveInSteps\") || \"{}\");\n    setSteps((prev) => ({ ...prev, ...savedSteps }));\n  }, []);\n\n  /**\n   * Saves move-in progress to localStorage whenever steps change.\n   */\n  useEffect(() => {\n    localStorage.setItem(\"moveInSteps\", JSON.stringify(steps));\n  }, [steps]);\n\n  /**\n   * Marks a step as completed and updates state.\n   */\n  const handleComplete = (step: string) => {\n    setSteps((prev) => ({ ...prev, [step]: true }));\n  };\n\n  // check if all required steps are completed\n  const allStepsCompleted = Object.entries(steps)\n    .filter(([key]) => key !== \"membershipPaid\") // ignore static steps\n    .every(([, value]) => value);\n\n  return (\n    <Box sx={styles.layout}>\n      {/* Sidebar */}\n      <Drawer variant=\"permanent\" sx={styles.drawer}>\n        <Box sx={styles.sidebar}>\n          <Typography variant=\"h6\" gutterBottom>\n            NABYT\n          </Typography>\n          <List>\n            {[\"Homepage\", \"Profile\", \"Bookings\", \"Documents\", \"Payments\"].map((text) => (\n              <ListItem key={text}>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n      </Drawer>\n\n      {/* Main Content */}\n      <Box sx={styles.content}>\n        <Container maxWidth=\"md\">\n          <Typography variant=\"h5\" sx={styles.title}>\n            Manage Your Move-in\n          </Typography>\n\n          <Paper sx={styles.card}>\n            <Typography variant=\"h6\">Your Move-in Progress</Typography>\n\n            {stepsList.map(({ key, label, alwaysComplete }) => (\n              <Box key={key} sx={styles.step}>\n                {getIcon(steps[key], alwaysComplete)}\n                <Typography>{steps[key] || alwaysComplete ? `${label} âœ…` : label}</Typography>\n                {!steps[key] && !alwaysComplete && (\n                  <Button size=\"small\" variant=\"contained\" sx={styles.button} onClick={() => handleComplete(key)}>\n                    {key === \"contractSigned\" ? \"Activate Now\" : key === \"depositPaid\" ? \"Pay Now\" : \"Complete\"}\n                  </Button>\n                )}\n              </Box>\n            ))}\n\n            <Typography variant=\"h6\" sx={styles.subTitle}>\n              Move-in Instructions\n            </Typography>\n            <Box sx={styles.step}>\n              {allStepsCompleted ? (\n                <Button variant=\"contained\" color=\"primary\" onClick={() => alert(\"Move-in instructions coming soon!\")}>\n                  Get Move-in Instructions\n                </Button>\n              ) : (\n                <>\n                  <CancelIcon color=\"error\" sx={styles.icon} />\n                  <Typography color=\"error\">Disabled: Complete all steps to enable.</Typography>\n                </>\n              )}\n            </Box>\n\n            <Typography variant=\"h6\" sx={styles.subTitle}>\n              Notifications\n            </Typography>\n            <Typography>\n              {allStepsCompleted\n                ? \"You've successfully completed all steps. You can now proceed with your move-in.\"\n                : \"You have pending actions. Please complete all steps to proceed with your move-in.\"}\n            </Typography>\n\n            <Divider sx={styles.divider} />\n            <Typography variant=\"h6\">Need Help?</Typography>\n            <Button sx={styles.helpButton} variant=\"outlined\">\n              Help Center\n            </Button>\n            <Button sx={styles.helpButton} variant=\"outlined\">\n              Contact Support\n            </Button>\n          </Paper>\n        </Container>\n      </Box>\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}