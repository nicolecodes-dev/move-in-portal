{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nicole/move-in-portal/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Box, Container, Typography, Paper, Button, Drawer, List, ListItem, ListItemText, Divider } from \"@mui/material\";\nimport { CheckCircle as CheckCircleIcon, WarningAmber as WarningAmberIcon, Cancel as CancelIcon } from \"@mui/icons-material\";\n\nconst stepsList = [\n  { key: \"contractSigned\", label: \"Contract signed\" },\n  { key: \"depositPaid\", label: \"Deposit paid\" },\n  { key: \"membershipPaid\", label: \"Membership fee paid\", alwaysComplete: true },\n  { key: \"welcomeEmailSent\", label: \"Your welcome email has been sent\" },\n];\n\n// get icon based on step status\nconst getIcon = (completed: boolean, alwaysComplete = false) =>\n  alwaysComplete || completed ? <CheckCircleIcon color=\"success\" /> : <WarningAmberIcon color=\"warning\" />;\n\nexport default function Home() {\n  const defaultSteps = {\n    contractSigned: false,\n    depositPaid: false,\n    membershipPaid: true, // always paid\n    welcomeEmailSent: false,\n  };\n\n  const [steps, setSteps] = useState(defaultSteps);\n  const [loading, setLoading] = useState(true);\n\n  // ðŸš¨ resets progress on every load\n  useEffect(() => {\n    localStorage.removeItem(\"moveInSteps\"); // wipe out saved progress\n    setSteps(defaultSteps); // reset state\n    setLoading(false);\n  }, []);\n\n  // update steps (but no longer saves to localStorage)\n  const updateSteps = (step: keyof typeof defaultSteps) => {\n    setSteps((prev) => {\n      if (prev[step]) return prev; // prevent useless updates\n      return { ...prev, [step]: true };\n    });\n  };\n\n  if (loading) return <Typography>Loading...</Typography>;\n\n  const allStepsCompleted = stepsList.every(({ key, alwaysComplete }) => alwaysComplete || steps[key]);\n\n  return (\n    <Box sx={{ display: \"flex\", minHeight: \"100vh\" }}>\n      {/* Sidebar */}\n      <Drawer variant=\"permanent\" sx={{ width: 240, flexShrink: 0 }}>\n        <Box sx={{ width: 240, p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>NABYT</Typography>\n          <List>\n            {[\"Homepage\", \"Profile\", \"Bookings\", \"Documents\", \"Payments\"].map((text) => (\n              <ListItem key={text}><ListItemText primary={text} /></ListItem>\n            ))}\n          </List>\n        </Box>\n      </Drawer>\n\n      {/* Main Content */}\n      <Box sx={{ flexGrow: 1, p: 3 }}>\n        <Container maxWidth=\"md\">\n          <Typography variant=\"h5\" gutterBottom>Manage Your Move-in</Typography>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\">Your Move-in Progress</Typography>\n\n            {stepsList.map(({ key, label, alwaysComplete }) => {\n              const isCompleted = steps[key] || alwaysComplete;\n\n              return (\n                <Box key={key} sx={{ display: \"flex\", alignItems: \"center\", gap: 1, my: 1 }}>\n                  {getIcon(isCompleted, alwaysComplete)}\n                  <Typography>{isCompleted ? `${label} âœ…` : label}</Typography>\n                  {!isCompleted && (\n                    <Button size=\"small\" variant=\"contained\" onClick={() => updateSteps(key)}>Complete</Button>\n                  )}\n                </Box>\n              );\n            })}\n\n            <Typography variant=\"h6\" sx={{ mt: 3 }}>Move-in Instructions</Typography>\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1, my: 1 }}>\n              {allStepsCompleted ? (\n                <Button variant=\"contained\" onClick={() => alert(\"Move-in instructions coming soon!\")}>\n                  Get Move-in Instructions\n                </Button>\n              ) : (\n                <>\n                  <CancelIcon color=\"error\" />\n                  <Typography color=\"error\">Disabled: Complete all steps to enable.</Typography>\n                </>\n              )}\n            </Box>\n\n            <Divider sx={{ my: 2 }} />\n            <Typography variant=\"h6\">Need Help?</Typography>\n            <Box sx={{ display: \"flex\", gap: 2, mt: 1 }}>\n              <Button variant=\"outlined\">Help Center</Button>\n              <Button variant=\"outlined\">Contact Support</Button>\n            </Box>\n          </Paper>\n        </Container>\n      </Box>\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}